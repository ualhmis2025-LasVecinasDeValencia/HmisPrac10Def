package org.ual.hmis.GallardoMartinez;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
public class LoginIncorrectoFaltaUsuarioTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  private WebDriverWait wait;
  
  JavascriptExecutor js;
  @Before
  public void setUp() {
	    System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe"); 
	    System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
	   
//	    FirefoxOptions firefoxOptions = new FirefoxOptions(); 
//	    firefoxOptions.addArguments("-headless");
//	    driver = new FirefoxDriver(firefoxOptions);

	    

	    ChromeOptions chromeOptions = new ChromeOptions(); 
	    chromeOptions.addArguments("-headless");
	    driver = new ChromeDriver(chromeOptions);
	    // WebDriver driver = new HtmlUnitDriver(BrowserVersion.FIREFOX, true);

	    
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    wait = new WebDriverWait(driver, Duration.ofSeconds(30));

  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void loginIncorrectoFaltaUsuario() {
    // Test name: LoginIncorrectoFaltaUsuario
    // Step # | name | target | value
    // 1 | open | /login | 
    driver.get("https://my-app-1748620076153.azurewebsites.net/login/login");
    // 2 | setWindowSize | 1670x697 | 
    driver.manage().window().setSize(new Dimension(1670, 697));
    // 3 | click | id=input-vaadin-password-field-8 | 
    
    wait.until(ExpectedConditions.elementToBeClickable(By.id("input-vaadin-password-field-8")));

    driver.findElement(By.id("input-vaadin-password-field-8")).click();
    // 4 | type | id=input-vaadin-password-field-8 | Gallardo
    driver.findElement(By.id("input-vaadin-password-field-8")).sendKeys("Gallardo");
    // 5 | click | css=vaadin-button:nth-child(2) | 
    
    
    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("vaadin-button:nth-child(2)")));

    driver.findElement(By.cssSelector("vaadin-button:nth-child(2)")).click();
    // 6 | assertText | id=error-message-vaadin-text-field-3 | Username is required
    assertThat(driver.findElement(By.id("error-message-vaadin-text-field-3")).getText(), is("Username is required"));
  }
}
