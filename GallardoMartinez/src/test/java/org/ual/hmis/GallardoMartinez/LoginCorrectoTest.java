package org.ual.hmis.GallardoMartinez;

// Generated by Selenium IDE
import org.junit.Test;

import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;

import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.support.ui.*;

import java.time.Duration;
import java.util.*;

public class LoginCorrectoTest {
  private WebDriver driver;
  private WebDriverWait wait;
  private Map<String, Object> vars;

  @Before
  public void setUp() {
    System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe");

//    FirefoxOptions options = new FirefoxOptions();
//    options.setAcceptInsecureCerts(true);
//    FirefoxOptions firefoxOptions = new FirefoxOptions(); 
//    firefoxOptions.addArguments("-headless");
//    driver = new FirefoxDriver(firefoxOptions);
//    
    
    

    ChromeOptions chromeOptions = new ChromeOptions(); 
    chromeOptions.addArguments("-headless");
    driver = new ChromeDriver(chromeOptions);
    // WebDriver driver = new HtmlUnitDriver(BrowserVersion.FIREFOX, true);

    
    driver.manage().window().setSize(new Dimension(1670, 697));
    driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(60));
    wait = new WebDriverWait(driver, Duration.ofSeconds(30));
    vars = new HashMap<>();
  }

  @After
  public void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  @Test
  public void loginCorrecto() {
    try {
      driver.get("https://my-app-1748620076153.azurewebsites.net/login");

      // Esperar que esté presente el campo de usuario
      wait.until(ExpectedConditions.elementToBeClickable(By.id("input-vaadin-text-field-7")));

      // Paso 3 | click | id=input-vaadin-text-field-7 |
      driver.findElement(By.id("input-vaadin-text-field-7")).click();

      // Paso 4 | type | id=input-vaadin-text-field-7 | Antonio
      driver.findElement(By.id("input-vaadin-text-field-7")).sendKeys("Antonio");

      // Esperar campo de contraseña
      wait.until(ExpectedConditions.elementToBeClickable(By.id("input-vaadin-password-field-8")));

      // Paso 5 | click | id=input-vaadin-password-field-8 |
      driver.findElement(By.id("input-vaadin-password-field-8")).click();

      // Paso 6 | type | id=input-vaadin-password-field-8 | Gallardo
      driver.findElement(By.id("input-vaadin-password-field-8")).sendKeys("Gallardo");

      // Esperar botón de login
      wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("vaadin-button:nth-child(2)")));

      // Paso 7 | click | css=vaadin-button:nth-child(2) |
      driver.findElement(By.cssSelector("vaadin-button:nth-child(2)")).click();

      // Esperar aparición del título con clase .m-0
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".m-0")));

      // Paso 8 | assertText | css=.m-0 | Lista de Personas
      assertThat(driver.findElement(By.cssSelector(".m-0")).getText(), is("Lista de Personas"));

    } catch (Exception e) {
      System.out.println("⚠️ Error durante la prueba de login:");
      e.printStackTrace();
      System.out.println("URL actual: " + driver.getCurrentUrl());
      System.out.println("HTML de la página:");
      System.out.println(driver.getPageSource());
      fail("Test fallido: " + e.getMessage());
    }
  }
}

